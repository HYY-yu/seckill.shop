kind: pipeline
type: kubernetes
name: shop

steps:
  - name: test
    image: golang:1.16.15
    environment:
      GOPROXY: https://goproxy.cn,direct
    volumes:
      - name: deps
        path: /go
    commands:
      - go get -d -t ./...
      - go test -v ./...
  - name: build
    image: golang:1.16.15-alpine3.15
    environment:
      GOPROXY: https://goproxy.cn,direct
    volumes:
      - name: deps
        path: /go
    commands:
      - go build -o ${DRONE_STAGE_NAME} ./internal/service/${DRONE_STAGE_NAME}/cmd/main.go
  - name: publishDocker
    image: plugins/docker
    settings:
      username:
        from_secret: DOCKER_USERNAME
      password:
        from_secret: DOCKER_PASSWORD
      build_args:
        - serviceName: ${DRONE_STAGE_NAME}
      dockerfile: ./deploy/Dockerfile
      registry: ccr.ccs.tencentyun.com
      custom_dns: 114.114.114.114
      repo:  ccr.ccs.tencentyun.com/hyy-yu/${DRONE_REPO_NAME}
      purge: true
      auto_tag: true
    when:
      ref:
        - refs/tags/v*
  - name: publishCharts
    image: golang:1.16.15
    environment:
      GOPROXY: https://goproxy.cn,direct
      GITHUB_USER:
        from_secret: GITHUB_USER
      GITHUB_PASSWORD:
        from_secret: GITHUB_PASSWROD
    commands:
      - cd /tmp
      - git config --global user.name drone.robot
      - git config --global user.email 690174435@qq.com
      - git clone https://$GIT_USERNAME:$GIT_PASSWORD@git.hyy-yu.space/yufeng/seckill.${DRONE_STAGE_NAME}.chart.git
      - cd seckill.${DRONE_STAGE_NAME}.chart
      - current_version=$(cat Chart.yaml | grep "version" | awk '{ print $2 }' | sed 's/-dev[a-z,0-9]*//')
      - "echo 'Current chart version: $current_version'"
      - chart_version=${DRONE_TAG}
      - echo "Using chart version $chart_version"
      - "cat Chart.yaml | sed 's/version.*/version: $chart_version/'  | sed 's/appVersion.*/appVersion: $tag/' > /tmp/Chart.yaml.patched"
      - cp /tmp/Chart.yaml.patched Chart.yaml
      - git add -all
      - git commit -m "Automated deployment of chart version $chart_version"
      - git push origin main
    when:
      ref:
        - refs/tags/v*

volumes:
  - name: deps
    temp: {}
---
# CD管道
kind: pipeline
type: kubernetes
name: deploy

clone:
  disable: true

steps:
  - name: clone
    image: apline/git
    commands:
      - git clone https://git.hyy-yu.space/yufeng/seckill.shop.chart.git
  - name: deploy_production
    image: pelotech/drone-helm3
    settings:
      helm_command: upgrade
      chart: ./
      release: sk-shop-release
      api_server: kubernetes.default.svc:443
      namespace: default
      kube_service_account: default

trigger:
  event:
    - promote
  target:
    - production
